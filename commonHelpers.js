import{a as L,i as f,S as v}from"./assets/vendor-4d53def3.js";(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function o(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(e){if(e.ep)return;e.ep=!0;const s=o(e);fetch(e.href,s)}})();const q=document.querySelector(".gallery");function P(t){const a=t.map(({webformatURL:o,largeImageURL:i,tags:e,likes:s,views:l,comments:m,downloads:g})=>`<li class="gallery-item">
      <a class="gallery-link" href="${i}">
      <img src="${o}" alt="${e}" class="gallery-img">
      </a>
        <div class="text-wrap">
          <p class="img-text">Likes <span class="img-text-span">${s}</span></p>
          <p class="img-text">Views <span class="img-text-span">${l}</span></p>
          <p class="img-text">Comments <span class="img-text-span">${m}</span></p>
          <p class="img-text">Downloads <span class="img-text-span">${g}</span></p>
        </div>
    </li>`).join("");q.insertAdjacentHTML("beforeend",a)}async function y({q:t="",page:a=1,per_page:o=15}={}){const e="https://pixabay.com/api/?key=44806225-40e07737f22f709bd193bb0f7",s="photo",l="horizontal",m=!0;return await L.get(`${e}&image_type=${s}&orientation=${l}&safesearch=${m}`,{params:{q:t,page:a,per_page:o}}).then(({data:g})=>g)}const x="is-hidden";function $(t){t.classList.add(x)}function C(t){t.classList.remove(x)}function I(t){t.disabled=!0}function E(t){t.disabled=!1}const c={hide:$,show:C,disable:I,enable:E},r={q:"",page:1,per_page:15,maxPage:""},u=document.querySelector(".bottom-spin"),p=document.querySelector(".loader");p.style.opacity=0;u.style.opacity=0;const n=document.querySelector(".page-btn");c.hide(n);const d=document.querySelector(".form");d.addEventListener("submit",T);async function T(t){document.querySelector(".gallery").innerHTML="",r.page=1,t.preventDefault(),p.style.opacity=1;const a=t.currentTarget;if(r.q=a.elements.query.value.trim().toLowerCase(),r.q.length<=0){f.show({backgroundColor:"#ef4040",messageColor:"#fff",messageSize:"16px",position:"topRight",message:"Please write something in the search field"}),p.style.opacity=0,d.reset();return}c.show(n),c.disable(n);try{const{hits:o,totalHits:i}=await y(r);S({hits:o}),r.maxPage=Math.ceil(i/r.per_page),o.length>0&&o.length!==i?(c.enable(n),n.addEventListener("click",w)):c.hide(n)}catch{h()}finally{d.reset()}}let b=new v(".gallery a",{captions:!0,captionType:"attr",captionsData:"alt",captionPosition:"bottom",captionDelay:250});async function S(t){const{hits:a,totalHits:o}=await y(r);if(o===0)h();else{P(a);const e=document.querySelector(".gallery-item").getBoundingClientRect().height;console.log(e),window.scrollBy({top:e*2,behavior:"smooth"})}b.on("show.simplelightbox",function(){}),b.refresh(),p.style.opacity="0"}function h(){f.error({backgroundColor:"#ef4040",messageColor:"#fff",messageSize:"16px",position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!"})}async function w(){r.page+=1,c.disable(n),u.style.opacity=1;try{const{hits:t}=await y(r);S({hits:t}),u.style.opacity=0}catch{h()}finally{c.enable(n),r.page===r.maxPage&&(c.hide(n),n.removeEventListener("click",w),f.info({backgroundColor:"#7453d7",messageColor:"#fff",messageSize:"16px",position:"bottomCenter",message:"We're sorry, but you've reached the end of search results."}))}}
//# sourceMappingURL=commonHelpers.js.map
